


This keyworld, Super keyword
this Keyword
-------------

find the output of the below program

program 1
---------

class Student {
	int rollno;
	String name;
	float fee;

	Student(int rollno, String name, float fee) {
		rollno = rollno;
		name = name;
		fee = fee;
	}

	void display() {
		System.out.println(rollno + " " + name + " " + fee);
	}
}

class TestThis1 {
	public static void main(String args[]) {
		Student s1 = new Student(111, "ankit", 5000f);
		Student s2 = new Student(112, "sumit", 6000f);
		s1.display();
		s2.display();
	}
}

0 null 0.0
0 null 0.0

Program2:
class Student {
	int rollno;
	String name;
	float fee;

	Student(int rollno, String name, float fee) {
		this.rollno = rollno;
		this.name = name;
		this.fee = fee;
	}

	void display() {
		System.out.println(rollno + " " + name + " " + fee);
	}
}



class TestThis2 {
	public static void main(String args[]) {
		Student s1 = new Student(111, "ankit", 5000f);
		Student s2 = new Student(112, "sumit", 6000f);
		s1.display();
		s2.display();
	}
}
111 ankit 5000.0
112 sumit 6000.0

program 3
---------

class Student {
	int rollno;
	String name;
	float fee;

	Student(int r, String n, float f) {
		rollno = r;
		name = n;
		fee = f;
	}

	void display() {
		System.out.println(rollno + " " + name + " " + fee);
	}
}

class TestThis3 {
	public static void main(String args[]) {
		Student s1 = new Student(111, "ankit", 5000f);
		Student s2 = new Student(112, "sumit", 6000f);
		s1.display();
		s2.display();
	}
}
111 ankit 5000.0
112 sumit 6000.0

program 4
---------

class A {
	void m() {
		System.out.println("hello m");
	}

	void n() {
		System.out.println("hello n");

		this.m();
	}
}

class TestThis4 {
	public static void main(String args[]) {
		A a = new A();
		a.n();
	}
}
hello n
hello m

program 5
---------

class A {
	A() {
		System.out.println("hello a");
	}

	A(int x) {
		this();
		System.out.println(x);
	}
}

class TestThis5 {
	public static void main(String args[]) {
		A a = new A(10);
	}
}

hello a
10

program 6
---------

class A {
	A() {
		this(5);
		System.out.println("hello a");
	}

	A(int x) {
		System.out.println(x);
	}
}

class TestThis6 {
	public static void main(String args[]) {
		A a = new A();
	}
}
5
hello a


program 7
---------

class Student {

	int rollno;
	String name, course;
	float fee;

	Student(int rollno, String name, String course) {
		this.rollno = rollno;
		this.name = name;
		this.course = course;
	}

	Student(int rollno, String name, String course, float fee) {
		this(rollno, name, course);// reusing constructor
		this.fee = fee;
	}

	void display() {
		System.out.println(rollno + " " + name + " " + course + " " + fee);
	}
}

class Main {
	public static void main(String args[]) {
		Student s1 = new Student(111, "ankit", "java");
		Student s2 = new Student(112, "sumit", "java", 6000f);
		s1.display();
		s2.display();
	}
}
111 ankit java 0.0
112 sumit java 6000.0

program 8
---------

class Student {
	int rollno;
	String name, course;
	float fee;

	Student(int rollno, String name, String course) {
		this.rollno = rollno;
		this.name = name;
		this.course = course;
	}

	Student(int rollno, String name, String course, float fee) {
		this.fee = fee;
		this(rollno, name, course);
	}

	void display() {
		System.out.println(rollno + " " + name + " " + course + " " + fee);
	}
}

class Main {
	public static void main(String args[]) {
		Student s1 = new Student(111, "ankit", "java");
		Student s2 = new Student(112, "sumit", "java", 6000f);
		s1.display();
		s2.display();
	}
}
java: call to this must be first statement in constructor

program 9
---------

class S2 {
	void m(S2 obj) {
		System.out.println("method is invoked");
	}

	void p() {
		m(this);
	}

	public static void main(String args[]) {
		S2 s1 = new S2();
		s1.p();
	}
}
method is invoked

program 10
----------

class B {
	A4 obj;

	B(A4 obj) {
		this.obj = obj;
	}

	void display() {
		System.out.println(obj.data);// using data member of A4 class
	}
}

class A4 {
	int data = 10;

	A4() {
		B b = new B(this);
		b.display();
	}

	public static void main(String args[]) {
		A4 a = new A4();
	}
}
10

program 11
-----------

class A {
	A getA() {
		return this;
	}

	void msg() {
		System.out.println("Hello java");
	}
}

class Test1 {
	public static void main(String args[]) {
		new A().getA().msg();
	}
}
Hello java


Super keyword
--------------

program 1
---------

class Animal {
	String color = "white";
}

class Dog extends Animal {
	String color = "black";

	void printColor() {
		System.out.println(color);
		System.out.println(super.color);
	}
}

class TestSuper1 {
	public static void main(String args[]) {
		Dog d = new Dog();
		d.printColor();
	}
}
black
white

program 2
---------


class Animal {
	void eat() {
		System.out.println("eating...");
	}
}

class Dog extends Animal {
	void eat() {
		System.out.println("eating bread...");
	}

	void bark() {
		System.out.println("barking...");
	}

	void work() {
		super.eat();
		bark();
	}
}

class TestSuper2 {
	public static void main(String args[]) {
		Dog d = new Dog();
		d.work();
	}
}
eating...
barking...

program 3
---------

class Animal {
	Animal() {
		System.out.println("animal is created");
	}
}

class Dog extends Animal {
	Dog() {
		super();
		System.out.println("dog is created");
	}
}

class TestSuper3 {
	public static void main(String args[]) {
		Dog d = new Dog();
	}
}
animal is created
dog is created

program 4
---------

class Animal {
	Animal() {
		System.out.println("animal is created");
	}
}

class Dog extends Animal {
	Dog() {
		System.out.println("dog is created");
	}
}

class TestSuper4 {
	public static void main(String args[]) {
		Dog d = new Dog();
	}
}
animal is created
dog is created


Program5:
class Person {
	int id;
	String name;

	Person(int id, String name) {
		this.id = id;
		this.name = name;
	}
}

class Emp extends Person {
	float salary;

	Emp(int id, String name, float salary) {
		super(id, name);// reusing parent constructor
		this.salary = salary;
	}

	void display() {
		System.out.println(id + " " + name + " " + salary);
	}
}

class TestSuper5 {
	public static void main(String[] args) {
		Emp e1 = new Emp(1, "ankit", 45000f);
		e1.display();
	}
}
1 ankit 45000.0

